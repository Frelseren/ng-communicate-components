{"version":3,"sources":["webpack:///./src/app/notification/notification.service.ts","webpack:///./src async","webpack:///./src/main.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/notification/notification.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/notification/notification.component.html"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAA0C;AAGJ;AAGtC;IAGE;QAFO,YAAO,GAAG,IAAI,qDAAO,EAAgB,CAAC;IAE9B,CAAC;IAEhB,iCAAG,GAAH,UAAI,YAA0B;QAC5B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IAClC,CAAC;IAED,iCAAG,GAAH;QACE,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC;IACrC,CAAC;IAZH;QAAC,wFAAU,EAAE;;2BAAA;IAcb,0BAAC;AAAD,CAAC;;;;;;;;ACnBD;AACA;AACA;AACA,uCAAuC,WAAW;AAClD;AACA;AACA;;;;;;;;;;;;;;ACN8C;AAC4B;AAE9B;AACY;AAExD,EAAE,CAAC,CAAC,8EAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,4FAAc,EAAE,CAAC;AACnB,CAAC;AAED,wHAAsB,EAAE,CAAC,eAAe,CAAC,kEAAS,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;ACVX;AACgC;AAMzE;IAEE,sBAAoB,mBAAwC;QAAxC,wBAAmB,GAAnB,mBAAmB,CAAqB;IAAG,CAAC;IAEhE,8BAAO,GAAP;QACE,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,EAAC,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,sCAAsC,EAAC,CAAC,CAAC;IACnG,CAAC;IACD,4BAAK,GAAL;QACE,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,EAAC,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,yCAAyC,EAAC,CAAC,CAAC;IACpG,CAAC;IAbH;QAAC,uFAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,kCAAmC;SACpC,CAAC;;oBAAA;IAWF,mBAAC;;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBwD;AACjB;AACI;AACF;AAEI;AAC+B;AACJ;AAezE;IAAA;IAAyB,CAAC;IAb1B;QAAC,sFAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,oEAAY;gBACZ,mGAAqB;aACtB;YACD,OAAO,EAAE;gBACP,gFAAa;gBACb,mEAAW;gBACX,iEAAU;aACX;YACD,SAAS,EAAE,CAAC,+FAAmB,CAAC;YAChC,SAAS,EAAE,CAAC,oEAAY,CAAC;SAC1B,CAAC;;iBAAA;IACuB,gBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;ACtBe;AAEmB;AAO5D;IAIE,+BAAoB,mBAAwC;QAJ9D,iBAWC;QAPqB,wBAAmB,GAAnB,mBAAmB,CAAqB;QAC1D,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,mBAAmB,CAAC,GAAG,EAAE,CAAC,SAAS,CAAC,eAAK,IAAK,KAAI,CAAC,YAAY,GAAG,KAAK,GAAC,CAAC,CAAC;IACrG,CAAC;IAED,qCAAK,GAAL;QACE,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IACrC,CAAC;IAdH;QAAC,uFAAS,CAAC;YACT,QAAQ,EAAE,cAAc;YACxB,kCAA4C;SAC7C,CAAC;;6BAAA;IAYF,4BAAC;;AAAD,CAAC;;;;;;;;;ACpBD;AAAA,mFAAmF;AACnF,8FAA8F;AAC9F,yEAAyE;AACzE,gFAAgF;AAEzE,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;;;;;;;;ACPF,4HAA4H,aAAa,kFAAkF,WAAW,Y;;;;;;;ACAtO,iEAAiE,mHAAmH,yJAAyJ,sBAAsB,kGAAkG,4B","file":"main.bundle.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Notification } from './notification';\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\n\n@Injectable()\nexport class NotificationService {\n  public subject = new Subject<Notification>();\n\n  constructor() {}\n\n  set(notification: Notification) {\n    this.subject.next(notification);\n  }\n\n  get():Observable<Notification> {\n    return this.subject.asObservable();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/notification/notification.service.ts","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 289;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 289\n// module chunks = 1","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import { Component } from '@angular/core';\nimport { NotificationService } from './notification/notification.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n})\nexport class AppComponent {\n\n  constructor(private notificationService: NotificationService) {}\n  \n  success() {\n    this.notificationService.set({type: 'success', message: 'Success! Everything went as planned.'});\n  }\n  error() {\n    this.notificationService.set({type: 'error', message: 'Error! Seems that something went wrong.'});\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\n\nimport { AppComponent } from './app.component';\nimport { NotificationComponent } from './notification/notification.component';\nimport { NotificationService } from './notification/notification.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NotificationComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule\n  ],\n  providers: [NotificationService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component } from '@angular/core';\nimport { Notification } from './notification';\nimport { NotificationService } from './notification.service';\nimport { Subscription } from 'rxjs/Subscription';\n\n@Component({\n  selector: 'notification',\n  templateUrl: './notification.component.html',\n})\nexport class NotificationComponent {\n  public notification: Notification;\n  public subscription: Subscription;\n\n  constructor(private notificationService: NotificationService) {\n    this.subscription = this.notificationService.get().subscribe(value => {this.notification = value});\n  }\n\n  close() {\n    this.notificationService.set(null);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/notification/notification.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","module.exports = \"<notification></notification>\\n<button class=\\\"Btn Btn--green text--14px text--bold\\\" (click)=\\\"success();\\\">success();</button>\\n<button class=\\\"Btn Btn--red text--14px text--bold\\\" (click)=\\\"error();\\\">error();</button>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 457\n// module chunks = 1","module.exports = \"<div *ngIf=\\\"notification\\\"\\n     [ngClass]=\\\"{\\n         'isSuccess': notification.type === 'success',\\n         'isError': notification.type === 'error'\\n     }\\\"\\n    class=\\\"Notification u-paddingVertical-s text--bold\\\">\\n    <div class=\\\"Container Grid Grid--spaceBetween Grid--alignCenter\\\">\\n        <span>{{notification.message}}</span>\\n        <i class=\\\"icon-fh-close text--14px Btn--pointer\\\"\\n           (click)=\\\"close();\\\"></i>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/notification/notification.component.html\n// module id = 458\n// module chunks = 1"],"sourceRoot":""}